create or replace PACKAGE BODY       "PROJ_OPPO_SI_SV" 

-- ====================================================
-- PACKAGE PROJ_OPPO_SV
-- PROJ_OPPO_XXX表データをPROJECT_LIST表に反映する
-- 前提条件：PROJ_OPPO_XXX、PROJ_OPPO_NO_XXX、
--           PROJECT_LIST_PA2_XXXに
--           データが入っていること
-- ====================================================


IS
-- ====================================================
-- PROCEDURE UPDATE_OPPO
-- PROJ_OPPO_XXXとPROJ_OPPO_LISTのオポテュニティデータを比較し
-- 差分をUPDATEする
-- PROJ_OPPO_LIST.STATUSがLost,No Opportunity,Closedの場合は
-- PROJECT_LIST.PROJ_STATUSをVoidにする
--
-- 入力パラメータ：IN_EXEC_USER_ID
--   実行ユーザID
-- リターンコード：OUT_RESUT_CODE
--   正常終了=200
--   異常終了=エラーコード
-- 例外処理：
--   ERR_TABLEにログを出力してエラーコードを返す
-- ====================================================
PROCEDURE UPDATE_OPPO
(
	IN_EXEC_USER_ID	IN	NUMBER,
	OUT_RESULT_CODE	OUT	VARCHAR2
)
IS

-- 変数
N_ERR_CODE		ERR_TABLE.ERR_CODE%TYPE;
V_ERR_MSG		ERR_TABLE.ERR_MSG%TYPE;

BEGIN


	-- ================================================
	--  契約締結日が変更されていたら更新する
	--  proj_start,proj_endを更新 (取込元データが通常と別なので別SQL)
	-- ================================================
	UPDATE PROJ_OPPO_LIST OL
	SET (OPPO_PROJ_START, OPPO_PROJ_END) 
	= (SELECT INOX.CONTRACT_DATE, ADD_MONTHS(INOX.CONTRACT_DATE,3)
		FROM PROJ_OPPO_XXX INOX
		WHERE INOX.OPPO_NUMBER = OL.OPPO_NUMBER
	)
	WHERE OPPO_NUMBER IN (SELECT INOX.OPPO_NUMBER FROM PROJ_OPPO_XXX INOX
           WHERE NVL(INOX.CONTRACT_DATE,TO_DATE('100001','YYYYMM')) != NVL(OL.OPPO_CONTRACT_DATE,TO_DATE('100001','YYYYMM'))
	)
	;

	-- ================================================
	-- 更新が必要なものを更新する
	-- ================================================
	UPDATE PROJ_OPPO_LIST OL
	SET (OPPO_PROJ_NAME, OPPO_CONTRACT_DATE, OPPO_CLIENT_NAME, OPPO_CONT_AMOUNT
		, OPPO_END_USER_NAME, SOLUTION_OWNER
		, PROGRESS, WIN_PROB, STATUS, CONT_TYPE, INDUSTRY, SERVICE_PORTFOLIO, DUNS_NUMBER
	) = (SELECT INOX.PROJ_NAME, INOX.CONTRACT_DATE, INOX.CLIENT_NAME, CONT_AMOUNT
		, INOX.END_USER_NAME, INOX.SOLUTION_OWNER
		, INOX.PROGRESS, INOX.WIN_PROB, INOX.STATUS, INOX.CONT_TYPE, INOX.CONT_TYPE, INOX.SERVICE_PORTFOLIO, INOX.DUNS_NUMBER
		FROM PROJ_OPPO_XXX INOX
		WHERE INOX.OPPO_NUMBER = OL.OPPO_NUMBER
	)
	WHERE OPPO_NUMBER IN (SELECT OPPO_NUMBER FROM PROJ_OPPO_XXX INOX
	       WHERE ((NVL(INOX.PROJ_NAME,' ') != NVL(OL.OPPO_PROJ_NAME,' ')
	       OR NVL(INOX.CONTRACT_DATE,TO_DATE('100001','YYYYMM')) != NVL(OL.OPPO_CONTRACT_DATE,TO_DATE('100001','YYYYMM'))
	       OR NVL(INOX.CLIENT_NAME,' ') != NVL(OL.OPPO_CLIENT_NAME,' ')
	       OR NVL(INOX.CONT_AMOUNT,0) != NVL(OL.OPPO_CONT_AMOUNT,0)
	       OR NVL(INOX.END_USER_NAME,' ') != NVL(OL.OPPO_END_USER_NAME,' ')
	       OR NVL(INOX.SOLUTION_OWNER,' ') != NVL(OL.SOLUTION_OWNER,' ')
	       OR NVL(INOX.PROGRESS,' ') != NVL(OL.PROGRESS,' ')
	       OR NVL(INOX.WIN_PROB,0) != NVL(OL.WIN_PROB,0)
	       OR NVL(INOX.STATUS,' ') != NVL(OL.STATUS,' ')
	       OR NVL(INOX.CONT_TYPE,' ') != NVL(OL.CONT_TYPE,' ')
	       OR NVL(INOX.CONT_TYPE,' ') != NVL(OL.INDUSTRY,' ')	-- Tech側のみCONT_TYPEにINDUSTRYを入れている
	       OR NVL(INOX.SERVICE_PORTFOLIO,' ') != NVL(OL.SERVICE_PORTFOLIO,' ')
	       OR NVL(INOX.DUNS_NUMBER,' ') != NVL(OL.DUNS_NUMBER,' ')
            ))
	    -- FY10 6月から
	    AND INOX.CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	)
	;


	-- ================================================
	-- 更新が必要なものを更新する
	-- OPPO_TYPEを更新
	-- ================================================
	UPDATE PROJ_OPPO_LIST OL
	SET OL.OPPO_TYPE = (
		SELECT NVL(POT.TYPE_ID,N_OPPO_TYPE_ELSE_ID) FROM PROJ_OPPO_XXX INOX, PROJ_OPPO_TYPE_LIST POT
		WHERE INOX.OPPO_NUMBER = OL.OPPO_NUMBER
		AND   INOX.OPPO_TYPE = POT.TYPE_NAME(+)
		)
	WHERE OL.OPPO_NUMBER IN (
		SELECT INOX.OPPO_NUMBER FROM PROJ_OPPO_XXX INOX, PROJ_OPPO_TYPE_LIST POT
		WHERE  NVL(POT.TYPE_ID,0) != NVL(OL.OPPO_TYPE,0) 
		AND    INOX.OPPO_TYPE = POT.TYPE_NAME(+)
		AND    INOX.OPPO_TYPE IS NOT NULL
		-- FY10 6月から
		AND INOX.CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	)
	;


	UPDATE PROJ_OPPO_LIST OL
	SET  (BUNRUI_CODE, BUNRUI_NAME)
	 = (SELECT NVL(OB.BUNRUI_CODE,999)	-- 一度取り込まれた後に不正な分類になったらERRコードで登録
	 	,INOX.BUNRUI
		FROM PROJ_OPPO_XXX INOX, PROJ_OPPO_BUNRUI_LIST OB
		WHERE INOX.OPPO_NUMBER = OL.OPPO_NUMBER
		AND  REPLACE(REPLACE(LOWER(INOX.BUNRUI),' ',''),'　') = REPLACE(REPLACE(LOWER(OB.BUNRUI_NAME),' ',''),'　','')
		AND  SYSDATE between OB.START_DATE(+) and NVL(OB.END_DATE(+),SYSDATE+1)
	)
	WHERE OPPO_NUMBER IN (SELECT OPPO_NUMBER FROM PROJ_OPPO_XXX INOX
		WHERE  NVL(REPLACE(REPLACE(LOWER(INOX.BUNRUI),' ',''),'　'),' ') != NVL(LOWER(OL.BUNRUI_NAME),' ')
		AND    INOX.BUNRUI IS NOT NULL
		-- FY11 6月から
	    AND INOX.CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	    AND EXISTS(SELECT 1 FROM PROJ_OPPO_BUNRUI_LIST OB WHERE END_DATE IS NULL AND OB.BUNRUI_NAME = INOX.BUNRUI)
	)
	;


	-- ================================================
	-- 更新が必要なものを更新する
	--  (ConsulSalesは、FY09Q4以降のみの更新じゃないとだめ)
	-- ================================================
	UPDATE PROJ_OPPO_LIST OL
	SET OL.CONSUL_SALES = NVL((SELECT E.EMP_NAME FROM EMP_LIST E, PROJ_OPPO_XXX OX
		WHERE OX.CONSUL_SALES = UPPER(E.MAIL_ADDRESS)
		AND   E.DEL_FLG != 1
		AND OL.OPPO_NUMBER = OX.OPPO_NUMBER), (SELECT OX.CONSUL_SALES FROM PROJ_OPPO_XXX OX WHERE OX.OPPO_NUMBER = OL.OPPO_NUMBER))
	WHERE OL.OPPO_CONTRACT_DATE >= TO_DATE('201006','YYYYMM')
	AND   OPPO_NUMBER IN (SELECT OPPO_NUMBER FROM PROJ_OPPO_XXX INOX, EMP_LIST INE
		WHERE NVL(OL.CONSUL_SALES,' ') != NVL(INE.EMP_NAME,' ')
		AND   INE.DEL_FLG != 1
		AND OL.OPPO_CONTRACT_DATE >= TO_DATE('201006','YYYYMM')
	)
	;


	-- ================================================
	-- 更新が必要なものを更新する
	-- PROJ_OPPO_LISTでBOOKING_ORGが空欄の場合のみ更新する
	-- ================================================
	UPDATE PROJ_OPPO_LIST OL
	SET OL.BOOKING_ORG = (
		SELECT BOOKING_ORG FROM PROJ_OPPO_XXX
		 WHERE OPPO_NUMBER = OL.OPPO_NUMBER
		)
	WHERE OL.OPPO_NUMBER IN (
		SELECT INOX.OPPO_NUMBER FROM PROJ_OPPO_XXX INOX
		WHERE  OL.BOOKING_ORG IS NULL
		AND    INOX.BOOKING_ORG IS NOT NULL
	)
	;


	-- ================================================
	-- PROJ_OPPO_XXXのCONT_TYPEが変更になっていたら
	-- PROJECT_LIST.CONTRACT_IDに反映させる
	-- ただし、PROJECT_LIST.GSI_PROJ_CODEがNULLでdata_upd_type=0のもののみ
	-- (それ以外はPAマスタ)
	-- ================================================
	UPDATE PROJECT_LIST P
	SET CONTRACT_ID = (
        	SELECT DECODE(LOWER(CONT_TYPE),'fp',2,'tm',1,'transfer',7,9)
        	FROM PROJ_OPPO_XXX WHERE OPPO_NUMBER = P.OPPO_NUMBER
    	)
	WHERE OPPO_NUMBER = (
		SELECT OX.OPPO_NUMBER FROM PROJ_OPPO_XXX OX
		WHERE  OX.OPPO_NUMBER = P.OPPO_NUMBER
		AND    DECODE(LOWER(OX.CONT_TYPE),'fp',2,'tm',1,'transfer',7,9) != P.CONTRACT_ID
	)
	AND    P.GSI_PROJ_CODE IS NULL
	AND    P.DATA_UPD_TYPE=0
	;

	-- ================================================
	-- PROJ_OPPO_LISTのSTATUSがNo Opportunity, Lost,Closedのものは
	-- PROJECT_LIST.PROJ_STATUSをVOIDにする
	-- ================================================
	UPDATE PROJECT_LIST P
	SET BOOK_STATUS = N_VOID
	WHERE OPPO_NUMBER = (
		SELECT O.OPPO_NUMBER FROM PROJ_OPPO_LIST O
		WHERE  O.OPPO_NUMBER = P.OPPO_NUMBER
		AND    O.STATUS IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
		-- FY09 6月から
		AND O.OPPO_CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	)
	AND P.BOOK_STATUS != 99
	;
	UPDATE PROJECT_LIST P
	SET REV_STATUS = N_VOID
	WHERE OPPO_NUMBER = (
		SELECT O.OPPO_NUMBER FROM PROJ_OPPO_LIST O
		WHERE  O.OPPO_NUMBER = P.OPPO_NUMBER
		AND    O.STATUS IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
		-- FY09 6月から
		AND O.OPPO_CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	)
	AND P.REV_STATUS != 99
	;
	UPDATE PROJECT_LIST P
	SET PROJ_STATUS = N_VOID
	WHERE OPPO_NUMBER = (
		SELECT O.OPPO_NUMBER FROM PROJ_OPPO_LIST O
		WHERE  O.OPPO_NUMBER = P.OPPO_NUMBER
		AND    O.STATUS IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
		-- FY09 6月から
		AND O.OPPO_CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD') 
	)
	AND P.PROJ_STATUS != 99
	;

	COMMIT;

	OUT_RESULT_CODE := '200';

EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK;
		N_ERR_CODE := SQLCODE;
		V_ERR_MSG := SUBSTR(SQLERRM,1,100);
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OSO_SV.UPDATE_OPPO 予期しないエラー');
		COMMIT;
		OUT_RESULT_CODE := '500 予期しないエラーが発生しました UPDATE_OPPO';

END UPDATE_OPPO;


-- ====================================================
-- PROCEDURE INSERT_OPPO
-- PROJ_OPPO_XXXにあってPROJ_OPPO_LISTにない新規オポチュニティデータを
-- PROJ_OPPO_LISTに登録する
--
-- 入力パラメータ：IN_EXEC_USER_ID
--   実行ユーザID
-- リターンコード：OUT_RESUT_CODE
--   正常終了=200
--   異常終了=エラーコード
-- 例外処理：
--   ERR_TABLEにログを出力してエラーコードを返す
-- ====================================================
PROCEDURE INSERT_OPPO
(
	IN_EXEC_USER_ID	IN	NUMBER,
	OUT_RESULT_CODE		OUT	VARCHAR2
)
IS

-- 変数
N_ERR_CODE		ERR_TABLE.ERR_CODE%TYPE;
V_ERR_MSG		ERR_TABLE.ERR_MSG%TYPE;

BEGIN

	INSERT INTO PROJ_OPPO_LIST
	(
		OPPO_NUMBER,
		OPPO_PROJ_NAME,
		OPPO_PROJ_START,
		OPPO_PROJ_END,
		OPPO_CONTRACT_DATE,
		OPPO_CONT_AMOUNT,
		OPPO_CLIENT_NAME,
		OPPO_END_USER_NAME,
		BID,
		SOLUTION_OWNER,
		BUNRUI_CODE,
		BUNRUI_NAME,
		CONSUL_SALES,
		PROGRESS,
		MODULE,
		WIN_PROB,
		STATUS,
		OPPO_TYPE,
		CONT_TYPE,
		CREATE_DATE,
		CREATE_PERSON,
		UPDATE_DATE,
		UPDATE_PERSON,
		INDUSTRY,
		SERVICE_PORTFOLIO,
		DUNS_NUMBER,
		OPTY_CREATION_DATE,
		BOOKING_ORG
	)
	SELECT
		OX.OPPO_NUMBER,
		OX.PROJ_NAME,
		NVL(OX.START_DATE,OX.CONTRACT_DATE),
		NVL(OX.END_DATE,ADD_MONTHS(OX.CONTRACT_DATE,3)),
		OX.CONTRACT_DATE,
		OX.CONT_AMOUNT,
		OX.CLIENT_NAME,
		OX.END_USER_NAME,
		OX.BID,
		OX.SOLUTION_OWNER,
		NVL(OB.BUNRUI_CODE, N_BUNRUI_ERR_CODE),
		OX.BUNRUI,
		NVL(E.EMP_NAME, OX.CONSUL_SALES),
		OX.PROGRESS,
		OX.MODULE,
		OX.WIN_PROB,
		OX.STATUS,
		nvl(POT.TYPE_ID,N_OPPO_TYPE_ELSE_ID),
		OX.CONT_TYPE,
		SYSDATE,
		IN_EXEC_USER_ID,
		SYSDATE,
		IN_EXEC_USER_ID,
		OX.CONT_TYPE,
		OX.SERVICE_PORTFOLIO,
		OX.DUNS_NUMBER,
		SYSDATE,
		BOOKING_ORG
		FROM PROJ_OPPO_XXX OX, PROJ_OPPO_BUNRUI_LIST OB, PROJ_OPPO_TYPE_LIST POT, EMP_LIST E
		WHERE NOT EXISTS (SELECT 1 FROM PROJ_OPPO_LIST OL WHERE SUBSTR(OL.OPPO_NUMBER,1,LENGTH(OX.OPPO_NUMBER)) = OX.OPPO_NUMBER)
		AND  REPLACE(REPLACE(LOWER(OX.BUNRUI),' ',''),'　') = REPLACE(REPLACE(LOWER(OB.BUNRUI_NAME(+)),' ',''),'　','')
		AND  SYSDATE between OB.START_DATE(+) and NVL(OB.END_DATE(+),SYSDATE+1)
		AND  OX.OPPO_TYPE = POT.TYPE_NAME(+)
		AND  OX.CONSUL_SALES = UPPER(E.MAIL_ADDRESS(+))
		AND  E.DEL_FLG(+) != 1	-- メールがダブっていることがあるので、有効なもののみ
		-- 2010/06以降のもののみ対象とする
		AND  OX.CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD')
	;

	COMMIT;

	OUT_RESULT_CODE := '200';

EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK;
		N_ERR_CODE := SQLCODE;
		V_ERR_MSG := SUBSTR(SQLERRM,1,100);
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OSO_SV.INSERT_OPPO 予期しないエラー');
		COMMIT;
		OUT_RESULT_CODE := '501 予期しないエラーが発生しました INSERT_OPPO';

END INSERT_OPPO;


-- ====================================================
-- PROCEDURE SEED_OPPO_NO
-- PROJ_OPPO_NO_XXXで紐づいていて、PROJECT_LISTにoppo_numberがないものを
-- PROJECT_LISTに反映、
-- PROJ_OPPO_XXXに存在して、PROJECT_LISTに存在しないものを
-- PROJECT_LISTに新規登録
-- メール送信
--
-- 入力パラメータ：IN_EXEC_USER_ID
--   実行ユーザID
-- リターンコード：OUT_RESUT_CODE
--   正常終了=200
--   異常終了=エラーコード
-- 例外処理：
--   ERR_TABLEにログを出力して次のデータへ続行
-- ====================================================
PROCEDURE SEED_OPPO_NO
(
	IN_EXEC_USER_ID	IN	NUMBER,
	OUT_RESULT_CODE		OUT	VARCHAR2
)
IS

-- 変数
N_CNT1			NUMBER(5,0);
N_CNT2			NUMBER(5,0);
N_CNT3			NUMBER(5,0);
N_CNT4			NUMBER(5,0);
N_ERR_CODE		ERR_TABLE.ERR_CODE%TYPE;
V_ERR_MSG		ERR_TABLE.ERR_MSG%TYPE;
V_CC_ORG_ID		PROJ_ORG_LIST.CC_ORG_ID%TYPE;
V_PROD_ORG_ID	PROJ_ORG_LIST.PROD_ORG_ID%TYPE;
V_ADMI			PRODUCT_ORG_LIST.ADMI%TYPE;
V_PROJ_CODE		PROJECT_LIST.PROJ_CODE%TYPE;
V_BUNRUI_CODE		PROJ_OPPO_LIST.BUNRUI_CODE%TYPE;
FY_START_DATE           DATE;
WRONG_CC_ORG	EXCEPTION;
WRONG_PROD_ORG	EXCEPTION;

-- 登録データのカーソル
CURSOR ins_line IS
	SELECT OX.*
	FROM PROJ_OPPO_XXX OX
	WHERE NOT EXISTS(
		SELECT 1 FROM PROJECT_LIST P 
		WHERE substr(P.OPPO_NUMBER,1,LENGTH(OX.OPPO_NUMBER)) = OX.OPPO_NUMBER
	)
	AND  OX.STATUS NOT IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
	-- 2010/06以降のものを対象とする
	AND  OX.CONTRACT_DATE >= TO_DATE('20100601','YYYYMMDD')
	;

ins_rec  ins_line%ROWTYPE;

BEGIN
	-- ================================================
	-- proj_oppo_xxxに存在して、project_listに存在しないオポチュニティデータを
	-- project_listに登録する
	-- ================================================
	OPEN ins_line;
	LOOP
		FETCH ins_line INTO ins_rec;
		EXIT WHEN ins_line%NOTFOUND;

		BEGIN
			V_CC_ORG_ID := NULL;
			V_PROD_ORG_ID := NULL;
			N_CNT2 := 0;

			-- ================================================
			-- product_orgの値でPROJ_PRODUCT_ORG_LIST.ORG_IDを設定. 
			-- 値が不正なものはエラー
			-- ================================================
			SELECT COUNT(DISTINCT ORG.ORG_ID) INTO N_CNT2
			FROM PROJ_OPPO_XXX OX, PRODUCT_ORG_LIST ORG
			WHERE LOWER(OX.PRODUCT_ORG) = LOWER(ORG.ORG_NAME_SHORT)
			AND   ORG.ORG_END_DATE IS NULL
			AND   ORG.INPUT_UNIT_FLG = 1
			AND   OX.OPPO_NUMBER = ins_rec.OPPO_NUMBER
			;

			IF N_CNT2 = 1 THEN
				SELECT ORG.ORG_ID, ORG.ADMI INTO V_PROD_ORG_ID, V_ADMI
				FROM PROJ_OPPO_XXX OX, PRODUCT_ORG_LIST ORG
				WHERE LOWER(OX.PRODUCT_ORG) = LOWER(ORG.ORG_NAME_SHORT)
				AND   ORG.ORG_END_DATE IS NULL
				AND   ORG.INPUT_UNIT_FLG = 1
				AND   OX.OPPO_NUMBER = ins_rec.OPPO_NUMBER
				;
			END IF;

			-- PROD_ORGが取れなければエラー
			IF V_PROD_ORG_ID IS NULL THEN
				RAISE WRONG_PROD_ORG;
			END IF;

			-- ================================================
			-- cost_center_orgの値でUNIT_IDを設定. 
			-- 値が不正なものはエラー
			-- ================================================
			SELECT COUNT(DISTINCT CC.ORG_ID) INTO N_CNT1
			FROM
				(SELECT C.VALUE || NVL(OX.COST_CENTER_ORG,SUBSTR(OM.CC_ORG_ID,5)) ORG_ID
				FROM PROJ_OPPO_XXX OX, CONST_LIST C,PROD_CC_ORG_MAP OM
				WHERE C.NAME = 'COST_CENTER_ORG'
				AND   SYSDATE BETWEEN C.START_DATE AND NVL(C.END_DATE, SYSDATE + 1)
				AND   OX.OPPO_NUMBER = ins_rec.OPPO_NUMBER
				AND (SELECT PO.ORG_ID FROM PRODUCT_ORG_LIST PO WHERE LOWER(PO.ORG_NAME_SHORT) = LOWER(OX.PRODUCT_ORG) AND ORG_END_DATE IS NULL) = OM.PROD_ORG_ID
				) OX
				-- 現在有効なコストセンタのみ
				,(SELECT ORG_ID FROM COST_CENTER_LIST WHERE SYSDATE BETWEEN ORG_START_DATE AND NVL(ORG_END_DATE, SYSDATE + 1)
				 )CC
			WHERE OX.ORG_ID = CC.ORG_ID
			;
			IF N_CNT1 = 1 THEN
				SELECT DISTINCT CC.ORG_ID INTO V_CC_ORG_ID
				FROM
					(SELECT C.VALUE || NVL(OX.COST_CENTER_ORG,SUBSTR(OM.CC_ORG_ID,5)) ORG_ID
					FROM PROJ_OPPO_XXX OX, CONST_LIST C,PROD_CC_ORG_MAP OM
					WHERE C.NAME = 'COST_CENTER_ORG'
					AND   SYSDATE BETWEEN C.START_DATE AND NVL(C.END_DATE, SYSDATE + 1)
					AND   OX.OPPO_NUMBER = ins_rec.OPPO_NUMBER
					AND (SELECT PO.ORG_ID FROM PRODUCT_ORG_LIST PO WHERE LOWER(PO.ORG_NAME_SHORT) = LOWER(OX.PRODUCT_ORG) AND ORG_END_DATE IS NULL) = OM.PROD_ORG_ID
					) OX
					-- 現在有効なコストセンタのみ
					,(SELECT ORG_ID FROM COST_CENTER_LIST WHERE SYSDATE BETWEEN ORG_START_DATE AND NVL(ORG_END_DATE, SYSDATE + 1)
					 )CC
				WHERE OX.ORG_ID = CC.ORG_ID
				;
			END IF;

			-- CCが取れなければエラー
			IF V_CC_ORG_ID IS NULL THEN
				RAISE WRONG_CC_ORG;
			END IF;

			-- ====================================================================
			-- 先にGSI_PROJ_CODEを入れられていたら、OPPO_NUMBERを入れるだけにする。
			-- (project_list.oppo_number = nullで、
			--  そのproject_list.gsi_proj_codeがproj_oppo_no_xxxに存在する場合)
			-- ====================================================================
			SELECT COUNT(NOX.OPPO_NUMBER) INTO N_CNT4
			FROM PROJECT_LIST P, PROJ_OPPO_NO_XXX NOX
			WHERE P.GSI_PROJ_CODE = NOX.GSI_PROJ_CODE
			AND   P.OPPO_NUMBER IS NULL
			AND   NOX.OPPO_NUMBER = ins_rec.OPPO_NUMBER
			;

			IF N_CNT4 = 1 THEN
				UPDATE PROJECT_LIST P 
				SET OPPO_NUMBER = ins_rec.OPPO_NUMBER
				WHERE P.GSI_PROJ_CODE = (SELECT GSI_PROJ_CODE FROM PROJ_OPPO_NO_XXX NOX
					WHERE NOX.OPPO_NUMBER = ins_rec.OPPO_NUMBER)
				;

				-- PROJ_ORG_LISTのPROD_ORG_IDをUPDATE
				UPDATE PROJ_ORG_LIST
					SET PROD_ORG_ID = V_PROD_ORG_ID
				WHERE PROJ_CODE = (SELECT P.PROJ_CODE FROM PROJECT_LIST P, PROJ_OPPO_NO_XXX NOX 
				                   WHERE  P.GSI_PROJ_CODE = NOX.GSI_PROJ_CODE AND NOX.OPPO_NUMBER = ins_rec.OPPO_NUMBER)
				AND   END_DATE IS NULL
				;

			ELSE

				SELECT 'TEMP'||TO_CHAR(PROJ_CODE_SEQ.NEXTVAL)
				INTO   V_PROJ_CODE
				FROM DUAL;
				INSERT INTO PROJ_OPPO_INTERFACE(
					PROJ_OPPO_INTERFACE_ID,
					INTERFACE_STATUS_CODE,
					ERROR_CODE,
					ERROR_MSG,
					MODE_CODE,
					CREATION_DATE,
					CREATED_BY,
					LAST_UPDATE_DATE,
					LAST_UPDATED_BY,
					LAST_UPDATE_LOGIN,
					DEFAULT_TYPE_CODE,
					PROJ_CODE,
					OPPO_NUMBER,
					CONS_START,
					CONS_END,
					PROJ_STATUS,
					UNIT_ID,
					CONTRACT_ID,
					OPPO_PROJ_NAME,
					OPPO_PROJ_START,
					OPPO_PROJ_END,
					OPPO_CONTRACT_DATE,
					OPPO_CONT_AMOUNT,
					OPPO_CLIENT_NAME,
					OPPO_END_USER_NAME,
					BID,
					SOLUTION_OWNER,
					BUNRUI,
					CONSUL_SALES,
					MODULE,
					WIN_PROB,
					STATUS,
					OPPO_TYPE,
					PRODUCT_ORG_ID
				)
				SELECT
					TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')||'_'||ins_rec.OPPO_NUMBER,	-- INTERFACE_ID
					'ACTIVE',
					NULL,
					NULL,
					'INSERT',
					SYSDATE,
					IN_EXEC_USER_ID,
					SYSDATE,
					IN_EXEC_USER_ID,
					'SEED_OPPO_NO',
					'OFFICIAL',
					V_PROJ_CODE,
					OPPO_NUMBER,
					nvl(START_DATE,CONTRACT_DATE),	-- CONS_START
					nvl(END_DATE,add_months(CONTRACT_DATE,3)),	-- CONS_END
					DECODE(STATUS, V_VOID_STATUS, N_VOID, V_VOID_STATUS2, N_VOID, V_VOID_STATUS3, N_VOID, N_PIPELINE),
					V_CC_ORG_ID,
					DECODE(LOWER(CONT_TYPE),'fp',2,'tm',1,'transfer',7,9),
					PROJ_NAME,
					START_DATE,
					END_DATE,
					CONTRACT_DATE,	-- CONTRACT_DATE
					CONT_AMOUNT,
					CLIENT_NAME,
					END_USER_NAME,
					BID,
					SOLUTION_OWNER,
					BUNRUI,
					NVL(E.EMP_NAME, OX.CONSUL_SALES),
					MODULE,
					WIN_PROB,
					STATUS,
					nvl(POT.TYPE_ID, N_OPPO_TYPE_ELSE_ID),
					V_PROD_ORG_ID
				FROM PROJ_OPPO_XXX OX, PROJ_OPPO_TYPE_LIST POT, EMP_LIST E
				WHERE OX.OPPO_TYPE = POT.TYPE_NAME(+)
				AND   OX.CONSUL_SALES = UPPER(E.MAIL_ADDRESS(+))
				AND   E.DEL_FLG(+) != 1
				AND    OPPO_NUMBER = ins_rec.OPPO_NUMBER
				;

				-- PROJECT_LISTにINSERT
				INSERT INTO PROJECT_LIST(
					PROJ_CODE,
--					CONS_START,
--					CONS_END,
					UNIT_ID,
					CONTRACT_ID,
					PROJ_STATUS,
					BOOK_STATUS,
					REV_STATUS,
					NO_UPD_REV_STATUS,
					WORK_STATUS,
					UPDATE_DATE,
					UPDATE_PERSON,
					OPPO_NUMBER,
					DEL_FLG,
					ADMI
				)
				SELECT
					PROJ_CODE,
--					CONS_START,
--					CONS_END,
					'',
					CONTRACT_ID,
					PROJ_STATUS,
					PROJ_STATUS,
					PROJ_STATUS,
					0,
					N_NOTWORK,
					SYSDATE,
					IN_EXEC_USER_ID,
					OPPO_NUMBER,
					0,
					V_ADMI
				FROM PROJ_OPPO_INTERFACE
				WHERE OPPO_NUMBER = ins_rec.OPPO_NUMBER
				AND   INTERFACE_STATUS_CODE = 'ACTIVE'
				;

				-- PROJ_ORG_LISTにINSERT
				SELECT TO_DATE(value,'YYYY/MM/DD') INTO FY_START_DATE
				  FROM CONST_LIST
				 WHERE name = 'FY_START_DATE';
				INSERT INTO PROJ_ORG_LIST(
					PROJ_CODE,
					PROD_ORG_ID,
					CC_ORG_ID,
					START_DATE,
					END_DATE
				)
				SELECT
					PROJ_CODE,
					PRODUCT_ORG_ID,
					UNIT_ID,
					FY_START_DATE,
					NULL
				FROM PROJ_OPPO_INTERFACE
				WHERE OPPO_NUMBER = ins_rec.OPPO_NUMBER
				AND   INTERFACE_STATUS_CODE = 'ACTIVE'
				;

				-- メール送信
				SEND_INSERTED_PROJECT_MAIL
				(
					V_PROJ_CODE
				);
			END IF;


			-- ステータスの変更
			UPDATE PROJ_OPPO_INTERFACE
			SET INTERFACE_STATUS_CODE = 'COMPLETE'
			WHERE OPPO_NUMBER = ins_rec.OPPO_NUMBER
			AND   INTERFACE_STATUS_CODE = 'ACTIVE'
			;

			COMMIT;


		EXCEPTION
		WHEN WRONG_CC_ORG THEN
			-- エラーの場合はデータをERR_TABLEに書く
			INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
			VALUES(SYSDATE,null,'CC_ORGが不正です','RMS.PROJ_OSO_SV.SEED_OPPO_NO,OPPO_NUMBER='||ins_rec.OPPO_NUMBER);
			COMMIT;
		WHEN WRONG_PROD_ORG THEN
			-- エラーの場合はデータをERR_TABLEに書く
			INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
			VALUES(SYSDATE,null,'PROD_ORGが不正です','RMS.PROJ_OSO_SV.SEED_OPPO_NO,OPPO_NUMBER='||ins_rec.OPPO_NUMBER);
			COMMIT;
		WHEN OTHERS THEN
			N_ERR_CODE := SQLCODE;
			V_ERR_MSG := SUBSTR(SQLERRM,1,100);
			INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
			VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OSO_SV.SEED_OPPO_NO,OPPO_NUMBER='||ins_rec.OPPO_NUMBER||'予期しないエラー');
			COMMIT;
		END;
	END LOOP;
	CLOSE ins_line;
	OUT_RESULT_CODE := '200';

EXCEPTION
	WHEN OTHERS THEN
		N_ERR_CODE := SQLCODE;
		V_ERR_MSG := SUBSTR(SQLERRM,1,100);
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OSO_SV.SEED_OPPO_NO 予期しないエラー');
		COMMIT;
		OUT_RESULT_CODE := '503 予期しないエラーが発生しました SEED_OPPO_NO';
END SEED_OPPO_NO;


-- ====================================================
-- PROCEDURE SEND_INSERTED_PROJECT_MAIL
-- New Project(OPPO) Registered! メールを送信する
--
-- 送信対象は、MAIL_CASE_LIST.MAIL_CASE_NAME = 'プロジェクト登録／更新'
-- に登録されているメンバー(本番環境の時のみ)
-- ====================================================
PROCEDURE SEND_INSERTED_PROJECT_MAIL
(
	IN_PROJ_CODE		IN	VARCHAR2
)
IS

-- ====================================================
-- 変数の宣言
-- ====================================================
N_IS_HONBAN	NUMBER;		--本番環境かどうか
V_MAIL_TO		VARCHAR2(10000);
N_MAIL_TO_CNT	NUMBER;
V_FROM_ADDRESS	EMP_LIST.MAIL_ADDRESS%TYPE;
V_MAIL_DOMAIN	VARCHAR2(100) := COMMON_PACK.GETCONST('MAIL_DOMAIN');
V_CONTENTS		VARCHAR2(4000);
V_TITLE			VARCHAR2(100);
V_PROJ_URL 		VARCHAR2(100);
V_CC_ORG_NAME	COST_CENTER_LIST.ORG_NAME%TYPE;

V_OPPO_NUMBER		PROJ_OPPO_LIST.OPPO_NUMBER%TYPE;
V_OPPO_PROJ_NAME	PROJ_OPPO_LIST.OPPO_PROJ_NAME%TYPE;
V_OPPO_CLIENT_NAME	PROJ_OPPO_LIST.OPPO_CLIENT_NAME%TYPE;
V_CC_NAME			COST_CENTER_LIST.ORG_NAME%TYPE;
V_PORG_NAME			PRODUCT_ORG_LIST.ORG_NAME%TYPE;
V_BUNRUI_CODENAME	PROJ_OPPO_BUNRUI_LIST.BUNRUI_NAME%TYPE;
V_BUNRUI_NAME		PROJ_OPPO_LIST.BUNRUI_NAME%TYPE;
V_CONSUL_SALES		PROJ_OPPO_LIST.CONSUL_SALES%TYPE;
V_BID				PROJ_OPPO_LIST.BID%TYPE;

N_ERR_CODE	ERR_TABLE.ERR_CODE%TYPE;
V_ERR_MSG	ERR_TABLE.ERR_MSG%TYPE;

BEGIN

	-- ====================================================
	-- メール設定
	-- ====================================================
	--本番とテストでメール送信相手を変えられるようにしておく
	SELECT COUNT(*) INTO N_IS_HONBAN FROM CONST_LIST WHERE NAME = '環境' AND VALUE = '本番';

	-- 必要項目を取得
	SELECT O.OPPO_NUMBER, O.OPPO_PROJ_NAME, O.OPPO_CLIENT_NAME, BUNRUI.BUNRUI_NAME, O.BUNRUI_NAME, CC.ORG_NAME, PORG.ORG_NAME, O.CONSUL_SALES, O.BID
	INTO V_OPPO_NUMBER, V_OPPO_PROJ_NAME, V_OPPO_CLIENT_NAME, V_BUNRUI_CODENAME, V_BUNRUI_NAME, V_CC_NAME, V_PORG_NAME, V_CONSUL_SALES, V_BID
	FROM PROJECT_LIST P, PROJ_OPPO_LIST O, COST_CENTER_LIST CC, PRODUCT_ORG_LIST PORG, PROJ_OPPO_BUNRUI_LIST BUNRUI
	    ,PROJ_ORG_LIST PO	-- 2012/06/05 ono add
	WHERE P.OPPO_NUMBER = O.OPPO_NUMBER
	AND   P.PROJ_CODE = IN_PROJ_CODE
	AND   PO.CC_ORG_ID = CC.ORG_ID
	AND   P.PROJ_CODE = PO.PROJ_CODE
	AND   PO.PROD_ORG_ID = PORG.ORG_ID
	AND   O.BUNRUI_CODE = BUNRUI.BUNRUI_CODE
	AND   CC.ORG_START_DATE = (SELECT MAX(ORG_START_DATE) FROM COST_CENTER_LIST INC
			WHERE INC.ORG_ID = CC.ORG_ID)
	AND   PORG.ORG_START_DATE = (SELECT MAX(ORG_START_DATE) FROM PRODUCT_ORG_LIST INPO
			WHERE INPO.ORG_ID = PORG.ORG_ID)
	;

	-- URL
	SELECT VALUE
	INTO V_PROJ_URL
	FROM CONST_LIST
	WHERE NAME = 'INSERT_PROJ_URL';

	-- FROM
	SELECT (E.MAIL_ADDRESS||'@'||V_MAIL_DOMAIN)
	INTO V_FROM_ADDRESS
	FROM MAIL_CASE_LIST MC, MAIL_RECIPIENT_LIST MR, EMP_LIST E
	WHERE MC.MAIL_CASE_ID = MR.MAIL_CASE_ID
	AND   MR.EMP_ID = E.EMP_ID
	AND   MC.MAIL_CASE_NAME = 'システム管理者'
	;

	-- TO
	N_MAIL_TO_CNT :=1;
	IF N_IS_HONBAN = 1 THEN
		--本番
		FOR ADD_REC IN 
			(SELECT ROWNUM NUM,(E.MAIL_ADDRESS||'@'||V_MAIL_DOMAIN) MAIL 
			FROM EMP_LIST E,MAIL_RECIPIENT_LIST R, MAIL_CASE_LIST C
			WHERE C.MAIL_CASE_NAME = 'プロジェクト登録／更新'
			AND   R.MAIL_CASE_ID = C.MAIL_CASE_ID
			AND   E.EMP_ID = R.EMP_ID
			-- 退職者は除くが、MLは対象とする
			AND   (E.DEL_FLG = 0 OR E.EMP_ID >= 900000)
		) LOOP
			IF N_MAIL_TO_CNT = 1 THEN
				V_MAIL_TO := ADD_REC.MAIL;
			ELSE
				V_MAIL_TO := V_MAIL_TO || ',' || ADD_REC.MAIL;
			END IF;
			N_MAIL_TO_CNT := N_MAIL_TO_CNT + 1;
		END LOOP;
		V_TITLE := 'Project Registered!(OPPO/'||V_OPPO_NUMBER||')';
	ELSE
		--テスト
		FOR ADD_REC IN 
			(SELECT ROWNUM NUM,(E.MAIL_ADDRESS||'@'||V_MAIL_DOMAIN) MAIL 
			FROM MAIL_CASE_LIST MC, MAIL_RECIPIENT_LIST MR, EMP_LIST E 
			WHERE MC.MAIL_CASE_ID = MR.MAIL_CASE_ID
			AND   MR.EMP_ID = E.EMP_ID
			AND   MC.MAIL_CASE_NAME = 'テスト用送信先'
		) LOOP
			IF N_MAIL_TO_CNT = 1 THEN
				V_MAIL_TO := ADD_REC.MAIL;
			ELSE
				V_MAIL_TO := V_MAIL_TO || ',' || ADD_REC.MAIL;
			END IF;
			N_MAIL_TO_CNT := N_MAIL_TO_CNT + 1;

		END LOOP;
		V_TITLE := 'Project Registered!(OPPO/'||V_OPPO_NUMBER||') TEST';
	END IF;

	-- CONTENTS
	V_CONTENTS := '新規案件登録報告'||chr(13)||chr(10)
		||chr(13)||chr(10)
		||'Temp Number   = '||IN_PROJ_CODE||chr(13)||chr(10)
		||'Oppo Number   = '||V_OPPO_NUMBER||chr(13)||chr(10)
		||'Project Name  = '||V_OPPO_PROJ_NAME||chr(13)||chr(10)
		||'顧客名        = '||V_OPPO_CLIENT_NAME||chr(13)||chr(10)
		||'PROJ管理組織名= '||V_PORG_NAME||chr(13)||chr(10)
		||'CC組織名      = '||V_CC_NAME||chr(13)||chr(10)
		||'SubIndustry   = '||V_BUNRUI_CODENAME ||'('|| V_BUNRUI_NAME||')'||chr(13)||chr(10)
		||'Consul Sales  = '||V_CONSUL_SALES||chr(13)||chr(10)
		||chr(13)||chr(10)
		||V_PROJ_URL||'&' || 'c_proj_code='||IN_PROJ_CODE;


	-- ====================================================
	-- メール送信
	-- ====================================================
	SENDMAIL(V_FROM_ADDRESS,V_MAIL_TO,V_TITLE,V_CONTENTS);

EXCEPTION
	WHEN OTHERS THEN
		N_ERR_CODE := SQLCODE;
		V_ERR_MSG := SUBSTR(SQLERRM,1,100);
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OSO_SV.SEND_MAIL,TEMP_NO='|| IN_PROJ_CODE ||',OPPO_NUMBER='||V_OPPO_NUMBER);

		COMMIT;


END;

-- ====================================================
-- EXEC_ALL
-- ====================================================

PROCEDURE EXEC_ALL
(
	IN_EXEC_USER_ID	IN	NUMBER,
	OUT_RESULT_CODE	OUT	VARCHAR2
)
IS

V_OUT_RESULT	VARCHAR2(1000);
N_CNT_OPPO_NUM	NUMBER(6,0);
N_CNT_OPPO_INT_NUM	NUMBER(6,0);

INT_NOT_EMPTY		EXCEPTION;
PROJ_OPPO_EMPTY		EXCEPTION;
UPDATE_OPPO_EXCEPTION	EXCEPTION;
INSERT_OPPO_EXCEPTION	EXCEPTION;
SEED_OPPO_NO_EXCEPTION	EXCEPTION;

BEGIN

	-- ================================================
	-- 実行前チェック
	-- ================================================
	-- OPPOデータを取り込んでいない場合（PROJ_OPPO_XXXが0件）
	SELECT COUNT(*) INTO N_CNT_OPPO_NUM FROM PROJ_OPPO_XXX;
	IF N_CNT_OPPO_NUM = 0 THEN
		RAISE PROJ_OPPO_EMPTY;
	END IF;

	-- 未処理のものがあればエラーを返す
	SELECT COUNT(*) INTO N_CNT_OPPO_INT_NUM FROM PROJ_OPPO_INTERFACE WHERE INTERFACE_STATUS_CODE = 'ACTIVE';
	IF N_CNT_OPPO_INT_NUM > 0 THEN
		RAISE INT_NOT_EMPTY;
	END IF;

	-- 前処理(合計値を削除)
	DELETE FROM PROJ_OPPO_XXX
	WHERE OPPO_NUMBER IS NULL;
	DELETE FROM PROJ_OPPO_XXX
	WHERE OPPORTUNITY NOT LIKE '%JP/%'
	AND OPPORTUNITY NOT LIKE '%JP/%';

	-- FY17対応 AppsのみBUNRUIからBOOKING_ORGに入れ替え
	UPDATE PROJ_OPPO_XXX OX
	SET OX.BOOKING_ORG = (
		SELECT BUNRUI FROM PROJ_OPPO_XXX INOX
		WHERE OX.OPPO_NUMBER = INOX.OPPO_NUMBER
		)
	WHERE OX.OPPO_NUMBER IN (
		SELECT INOX.OPPO_NUMBER FROM PROJ_OPPO_XXX INOX, PRODUCT_ORG_LIST PO
		WHERE INOX.PRODUCT_ORG = PO.ORG_NAME_SHORT
		AND (PO.LEVEL3 = APPS_ORG_ID OR PO.LEVEL3 = SAAS_ORG_ID OR PO.LEVEL3 = OLD_APPS_ORG_ID)
        AND INOX.BUNRUI IS NOT NULL
        AND (OPTY_CREATION_DATE >= TO_DATE(FROM_OPTY_DATE,'YYYY/MM/DD') or OPTY_CREATION_DATE is null)
	);
	UPDATE PROJ_OPPO_XXX OX
	SET OX.BUNRUI = NULL
	WHERE OX.OPPO_NUMBER IN (
		SELECT INOX.OPPO_NUMBER FROM PROJ_OPPO_XXX INOX, PRODUCT_ORG_LIST PO
		WHERE INOX.PRODUCT_ORG = PO.ORG_NAME_SHORT
		AND (PO.LEVEL3 = APPS_ORG_ID OR PO.LEVEL3 = SAAS_ORG_ID OR PO.LEVEL3 = OLD_APPS_ORG_ID)
        AND INOX.BUNRUI IS NOT NULL
        AND (OPTY_CREATION_DATE >= TO_DATE(FROM_OPTY_DATE,'YYYY/MM/DD') or OPTY_CREATION_DATE is null)
	);
    
    -- ANSWER_XXXでSTATUSがLost,Closedのものに関して、行削除する。
    DELETE from ANSWERS_XXX where OPPO_STATUS in (V_VOID_STATUS2,V_VOID_STATUS3);

	-- SIレポートのヘッダー情報から契約金額(JP)がなくなってしまったため、明細行を集計した金額をPROJ_OPPO_XXXにUPDATEする
	MERGE INTO PROJ_OPPO_XXX T
	USING (SELECT OPPO_NUMBER, SUM(OPPO_REVENUE) REVENUE FROM ANSWERS_XXX GROUP BY OPPO_NUMBER) F
	   ON ( T.OPPO_NUMBER = F.OPPO_NUMBER )
	 WHEN MATCHED THEN
	   UPDATE SET 
		T.CONT_AMOUNT = F.REVENUE;

	COMMIT;
	--================================
	UPDATE_OPPO(IN_EXEC_USER_ID,V_OUT_RESULT);

	OUT_RESULT_CODE := V_OUT_RESULT;
	IF OUT_RESULT_CODE != '200' THEN
		RAISE UPDATE_OPPO_EXCEPTION;
	END IF;
	--================================
	INSERT_OPPO(IN_EXEC_USER_ID,V_OUT_RESULT);

	OUT_RESULT_CODE := V_OUT_RESULT;
	IF OUT_RESULT_CODE != '200' THEN
		RAISE INSERT_OPPO_EXCEPTION;
	END IF;
	--================================
	SEED_OPPO_NO(IN_EXEC_USER_ID,V_OUT_RESULT);

	OUT_RESULT_CODE := V_OUT_RESULT;
	IF OUT_RESULT_CODE != '200' THEN
		RAISE SEED_OPPO_NO_EXCEPTION;
	END IF;
	--================================
	UPD_END_USER_ACCOUNT_ID(V_OUT_RESULT);
	--================================


	-- BOOK_STATUSを更新する
	UPDATE PROJECT_LIST P
	SET BOOK_STATUS = (SELECT FS.STATUS_ID
		FROM FCST_STATUS_LIST FS, STATUS_MAP_LIST SM, PROJECT_LIST_V PV
		WHERE FS.STATUS_ID = SM.STATUS_ID
		AND PV.WIN_PROB BETWEEN SM.MIN_WIN_PROB AND MAX_WIN_PROB
		AND P.PROJ_CODE = PV.PROJ_CODE
	)
	WHERE P.PROJ_CODE IN (SELECT PROJ_CODE
		FROM FCST_STATUS_LIST FS, STATUS_MAP_LIST SM, PROJECT_LIST_V PV
		WHERE FS.STATUS_ID = SM.STATUS_ID
		AND PV.WIN_PROB BETWEEN SM.MIN_WIN_PROB AND MAX_WIN_PROB
		AND FS.STATUS_ID != NVL(PV.BOOK_STATUS,NULL_NUM)
		AND PV.CONTRACT_DATE >= TO_DATE('201006','YYYYMM')
		AND PV.STATUS NOT IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
	);

	-- REV_STATUSを更新する
	-- REV_STATUSはNO_UPD_REV_STATUSが1のものは更新しない
	UPDATE PROJECT_LIST P
	SET REV_STATUS = (SELECT FS.STATUS_ID
		FROM FCST_STATUS_LIST FS, STATUS_MAP_LIST SM, PROJECT_LIST_V PV
		WHERE FS.STATUS_ID = SM.STATUS_ID
		AND PV.WIN_PROB BETWEEN SM.MIN_WIN_PROB AND MAX_WIN_PROB
		AND P.PROJ_CODE = PV.PROJ_CODE
	)
	WHERE P.PROJ_CODE IN (SELECT PROJ_CODE
		FROM FCST_STATUS_LIST FS, STATUS_MAP_LIST SM, PROJECT_LIST_V PV
		WHERE FS.STATUS_ID = SM.STATUS_ID
		AND PV.WIN_PROB BETWEEN SM.MIN_WIN_PROB AND MAX_WIN_PROB
		AND FS.STATUS_ID != NVL(PV.REV_STATUS,NULL_NUM)
		AND (PV.NO_UPD_REV_STATUS != 1 OR FS.STATUS_ID = 5)
		AND PV.CONTRACT_DATE >= TO_DATE('201006','YYYYMM')
		AND PV.STATUS NOT IN (V_VOID_STATUS, V_VOID_STATUS2,V_VOID_STATUS3)
	);

	--PROJ_STATUSを更新する 後に削除したい
update project_list set proj_status = 6 where no_upd_rev_status = 0 and book_status = 5 and proj_status != 6;
update project_list set proj_status = 4 where no_upd_rev_status = 0 and book_status = 4 and proj_status not in  (4,3);
update project_list set proj_status = 3 where no_upd_rev_status = 0 and book_status = 3 and proj_status != 3;
update project_list set proj_status = 2 where no_upd_rev_status = 0 and book_status = 2 and proj_status != 2;
update project_list set proj_status = 1 where no_upd_rev_status = 0 and book_status = 1 and proj_status not in(1,0);
update project_list set proj_status = 99 where no_upd_rev_status = 0 and book_status = 99 and proj_status != 99;

update project_list set proj_status = 6 where no_upd_rev_status = 1 and rev_status = 5 and proj_status != 6;
update project_list set proj_status = 4 where no_upd_rev_status = 1 and rev_status = 4 and proj_status not in  (4,3);
update project_list set proj_status = 3 where no_upd_rev_status = 1 and rev_status = 3 and proj_status != 3;
update project_list set proj_status = 2 where no_upd_rev_status = 1 and rev_status = 2 and proj_status != 2;
update project_list set proj_status = 1 where no_upd_rev_status = 1 and rev_status = 1 and proj_status not in(1,0);
update project_list set proj_status = 99 where no_upd_rev_status = 1 and rev_status = 99 and proj_status != 99;

-- Sales変更する前にCloseしてしまったため手動で更新
update proj_oppo_list set consul_sales = '渡久山 淳' where oppo_number = '3-28VOG9B';
update proj_oppo_list set CONSUL_SALES = 'Shuichiro Kamitake' where oppo_number = '3PZJG';

-- 
update proj_oppo_list set oppo_proj_name = 'Javaバージョンアップアセスメント支援' where oppo_number = '69TGQ';
update proj_oppo_list set oppo_proj_name = 'IT-TNGA データ収集・蓄積共通基盤 PoC支援' where oppo_number = '6DD3J';

	COMMIT;
	--================================

EXCEPTION
	WHEN UPDATE_OPPO_EXCEPTION THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'UPDATE_OPPO_EXCEPTIONエラー：'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'UPDATE_OPPO_EXCEPTION'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.EXEC_ALL');
		COMMIT;

	WHEN INSERT_OPPO_EXCEPTION THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'INSERT_OPPO_EXCEPTIONエラー：'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'INSERT_OPPO_EXCEPTIONエラー'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.EXEC_ALL');
		COMMIT;

	WHEN SEED_OPPO_NO_EXCEPTION THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'SEED_OPPO_NOエラー：'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'SEED_OPPO_NOエラー：'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.EXEC_ALL');
		COMMIT;

	WHEN PROJ_OPPO_EMPTY THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'PROJ_OPPO_EMPTYエラー：'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'PROJ_OPPO_EMPTYエラー：'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.EXEC_ALL');
		COMMIT;

	WHEN INT_NOT_EMPTY THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'INT_NOT_EMPTYエラー'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'INT_NOT_EMPTYエラー'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.EXEC_ALL');
		COMMIT;

	WHEN OTHERS THEN
		ROLLBACK;
		OUT_RESULT_CODE := 'OTHERエラー：'||OUT_RESULT_CODE;
		-- エラーの場合はERR_TABLEに書く
		INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
		VALUES(SYSDATE,null,'OTHERエラー：'||OUT_RESULT_CODE,'RMS.PROJ_OSO_SV.SEED_OPPO_NO');
		COMMIT;

END;

-- ====================================================
-- PROCEDURE UPD_END_USER_ACCOUNT_ID
-- PROJ_OPPO_LIST.OPPO_EU_ACCOUNT_IDが、PROJ_OPPO_LIST.OPPO_END_USER_NAMEに応じたものでない場合は更新
--
-- リターンコード：OUT_RESUT_CODE
--   正常終了=200
--   異常終了=エラーコード
-- 例外処理：
--   ERR_TABLEにログを出力して終了
-- ====================================================
PROCEDURE UPD_END_USER_ACCOUNT_ID
(
	OUT_RESULT_CODE	OUT	VARCHAR2
)
IS

N_ERR_CODE		ERR_TABLE.ERR_CODE%TYPE;
V_ERR_MSG		ERR_TABLE.ERR_MSG%TYPE;

-- 更新データのカーソル
CURSOR upd_line IS
	SELECT OP.OPPO_NUMBER, OP.OPPO_EU_ACCOUNT_ID MAE_EU_ACCOUNT_ID, ACNT_M.ACCOUNT_ID ATO_EU_ACCOUNT_ID
	FROM  PROJ_OPPO_LIST OP
		,(SELECT ACNT.ACCOUNT_NAME, AL.ACCOUNT_ID
		FROM ACCOUNT ACNT, ACCOUNT_LIST AL
		WHERE ACNT.ACCOUNT_ID = AL.ACCOUNT_ID
		) ACNT_M
	WHERE TRIM_ACCOUNT_NAME(OP.OPPO_END_USER_NAME) = TRIM_ACCOUNT_NAME(ACNT_M.ACCOUNT_NAME(+))
	AND   NVL(OP.OPPO_EU_ACCOUNT_ID,-1) != NVL(ACNT_M.ACCOUNT_ID,-1)
	;

upd_rec  upd_line%ROWTYPE;

BEGIN
	-- ================================================
	-- EU_ACCOUNT_IDに変更が必要だったら変更する
	-- ================================================
	OPEN upd_line;
	LOOP
		FETCH upd_line INTO upd_rec;
		EXIT WHEN upd_line%NOTFOUND;

		BEGIN
			UPDATE PROJ_OPPO_LIST
			SET OPPO_EU_ACCOUNT_ID = DECODE(upd_rec.ATO_EU_ACCOUNT_ID,-1,NULL,upd_rec.ATO_EU_ACCOUNT_ID)
			WHERE OPPO_NUMBER = upd_rec.OPPO_NUMBER
			;

			COMMIT;

		EXCEPTION
		WHEN OTHERS THEN
			N_ERR_CODE := SQLCODE;
			V_ERR_MSG := SUBSTR(SQLERRM,1,100);
			INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
			VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJECT_LIST_SV.UPD_END_USER_ACCOUNT_ID 予期しないエラー '||upd_rec.OPPO_NUMBER);
			COMMIT;

		END;
	END LOOP;
	CLOSE upd_line;
	OUT_RESULT_CODE := '200';

EXCEPTION
	WHEN OTHERS THEN
			N_ERR_CODE := SQLCODE;
			V_ERR_MSG := SUBSTR(SQLERRM,1,100);
			INSERT INTO ERR_TABLE(ERR_DATE,ERR_CODE,ERR_MSG,ERR_DETAIL)
			VALUES(SYSDATE,N_ERR_CODE,V_ERR_MSG,'RMS.PROJ_OPPO_SV.UPD_END_USER_ACCOUNT_ID 予期しないエラー');
			COMMIT;
			OUT_RESULT_CODE := '500 予期しないエラーが発生しました UPD_END_USER_ACCOUNT_ID';

END UPD_END_USER_ACCOUNT_ID;



END;